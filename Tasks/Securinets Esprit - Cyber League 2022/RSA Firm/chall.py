from Crypto.Util.number import *
from sympy import nextprime
from secret import flag

nbit = 2048
delta = 1024
flag = bytes_to_long(flag)

def genkey(nbit, delta):
	e = 0x10001
	while True:
		p = getPrime(nbit)
		r = getRandomNBitInteger(delta)
		q = nextprime(p + r)
		if GCD(e, (p-1)*(q-1)) == 1:
			return p*q, e

n, e = genkey(nbit, delta)
c = pow(flag, e, n)

print(f"{n = }")
print(f"{e = }")
print(f"{c = }")

""" n = 331564810111521949300247076545069058573396763607204345490612387907944450300298027588177749908898264687155709282724381377429636197471510499158322216067519261410036332856690354791909296305207414072262844773205452929501720770329551438555363028708376334299886284909141492386909633182437118734075511496160067892807466098450159637716987427096812281678408891226318818285239927168594487132600714793251032413493195220029199295966476655133654708030341478315857476776178212082947098241355335647501158457221194194848516068609689937791308406692321902266547901852791767682724447083462784434361299034978899927391327215661632360585659841118979773177355226876860657454688844151655442365923969488814754937372931584966578151822614006606600962258199696516154736146186969888484673870924964491022361317937361217509106493790333449266987604154040991211179935720901604976422747480493352069778067955128639810606669027730256856033053143425109920058881062812958493926189620369589625684986278879628123820523535819252856741224618732565706842742373277882307359597551950334007602862042140227571348064673946227879613942474632333260492413109304067169721414274217295326326308641247037430129976483413663167286091658424510506935078332071096775339093822987986566632803991
e = 65537
c = 8692709131867040031663204253710039977327602564822835819311831928540267712285552111883435957291252221773221770753775719134608086458502101233751894899208632905145298435041149161973627380927029395592890102479950085558130347872382682727280451678584692143896609529798626438940024847353573273672545274967372527040945673146154126072120397275586474099898863362410551320325899577459096287907859618976864053486994622572553688667950726855170482190690555449428895454910158576997686365721058374740078678107304573939228688960754008785178694951056291831612692552502620689709297485467248647044922521778006897847201569417640031500624918490785306948288923844054954785617972066468516238756698019964533512583787678083224940429215134641526942865017379503616134763192157280118699578510570655197467060545955413744574698944005193744527349359669468046459174315888762918081367794291688298106008058463261954473525974010728840225615444359517423358786204188376455586920290801636676045598408940941487018117878686938632180425195821101179071205003458453980061111121255326927755830456174342789397860101361954954762323451205035764672306595547940155795384550894676138532196596416212116522090471747362101991812561155069556265112252604978740823628554181183715546352613 """